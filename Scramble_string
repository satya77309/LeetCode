//C++ 

class Solution {
public:
    map<pair<string,string>,bool> m;
    bool isScramble(string s1, string s2) {
        if(s1==s2)
            return true;
        if(s1.length()!=s2.length())
            return false;
        if(m.count({s1,s2})>0)
            return m[{s1,s2}];
        int n=s1.length();
        bool ans=false;
        for(int i=1;i<n;i++)
        {
            if((isScramble(s1.substr(0,i),s2.substr(0,i)) && isScramble(s1.substr(i,n-i),s2.substr(i,n-i)))
               || isScramble(s1.substr(0,i),s2.substr(n-i,i)) && isScramble(s1.substr(i,n-i),s2.substr(0,n-i)))
            {
                ans=true;
                break;
            }
        }
        return m[{s1,s2}]=ans;
        
    }
};


Problem link:  https://leetcode.com/problems/scramble-string/

Description :  This is DP problem.
